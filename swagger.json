{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "description": "API for E-commerce application",
    "title": "E-commerce API"
  },
  "host": "localhost:3200",
  "securityDefinitions": {
    "JWT": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "paths": {
    "/api/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get Products",
        "description": "User will get all products",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ProductResponse" }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Add a new product (JSON)",
        "description": "Create a new product. Provide imageUrl as a string (filename or URL) in JSON.",
        "security": [{ "JWT": {} }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product payload",
            "required": true,
            "schema": { "$ref": "#/definitions/ProductCreateRequest" }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created",
            "schema": { "$ref": "#/definitions/ProductResponse" }
          },
          "400": {
            "description": "Validation error",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "500": {
            "description": "Server error",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          }
        }
      }
    },
    "/api/users/signin": {
      "post": {
        "tags": ["Users"],
        "summary": "Login",
        "description": "User login to get token",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User Credentials",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Incorrect Credentials"
          }
        }
      }
    },
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Register new user",
        "description": "Create a new user account and return created user (without password)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Signup payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignupRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "User already exists",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/products/rate": {
      "post": {
        "tags": ["Products"],
        "summary": "Rate a product",
        "description": "Add or update a rating for a product (requires authenticated user).",
        "security": [{ "JWT": {} }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/RateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Rating added/updated",
            "schema": { "type": "object", "properties": { "message": { "type": "string" } } }
          },
          "400": {
            "description": "Validation error",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          }
        }
      }
    },
    "/api/products/filter": {
      "get": {
        "tags": ["Products"],
        "summary": "Filter products",
        "description": "Filter products by min/max price and categories (categories as CSV or JSON array string).",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "name": "minPrice",
            "in": "query",
            "type": "number",
            "required": false
          },
          {
            "name": "maxPrice",
            "in": "query",
            "type": "number",
            "required": false
          },
          {
            "name": "categories",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Comma-separated list (e.g. 'Cat1,Cat2') or JSON array string"
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered products",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/ProductResponse" } }
          },
          "400": {
            "description": "Validation error",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          }
        }
      }
    },
    "/api/products/averagePrice": {
      "get": {
        "tags": ["Products"],
        "summary": "Average product price per category",
        "description": "Returns average price grouped by category.",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "Average price per category",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AveragePriceResponse" }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by id",
        "description": "Get a single product by id.",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product id"
          }
        ],
        "responses": {
          "200": {
            "description": "Product found",
            "schema": { "$ref": "#/definitions/ProductResponse" }
          },
          "404": {
            "description": "Product not found",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error",
            "schema": { "$ref": "#/definitions/ErrorResponse" }
          }
        }
      }
    }
  },
  "definitions": {
    "SignupRequest": {
      "type": "object",
      "required": ["name", "email", "password"],
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "john@example.com"
        },
        "password": {
          "type": "string",
          "format": "password",
          "example": "P@ssw0rd!"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "64f2b1e2a1234abcd5678ef0"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "john@example.com"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Validation failed: email is required"
        }
      }
    },
    "ProductResponse": {
      "type": "object",
      "properties": {
        "_id": { "type": "string", "example": "64f2b1e2a1234abcd5678ef0" },
        "name": { "type": "string", "example": "iPhone 13" },
        "desc": { "type": "string", "example": "Latest model" },
        "price": { "type": "number", "example": 999.99 },
        "imageUrl": { "type": "string", "example": "2023-07-24T08_31_00.909Ziphone.png" },
        "category": { "type": "string", "example": "Phones" },
        "inStock": { "type": "integer", "example": 10 },
        "size": { "type": "array", "items": { "type": "string" }, "example": ["S","M","L"] },
        "categories": { "type": "array", "items": { "type": "string" } },
        "reviews": { "type": "array", "items": { "type": "string" } }
      }
    },
    "RateRequest": {
      "type": "object",
      "required": ["productID", "rating"],
      "properties": {
        "productID": { "type": "string", "example": "64f2b1e2a1234abcd5678ef0" },
        "rating": { "type": "number", "example": 4 }
      }
    },
    "AveragePriceResponse": {
      "type": "object",
      "properties": {
        "_id": { "type": "string", "example": "Phones" },
        "averagePrice": { "type": "number", "example": 549.99 }
      }
    },
    "ProductCreateRequest": {
      "type": "object",
      "required": ["name", "price"],
      "properties": {
        "name": { "type": "string", "example": "Phone Pro" },
        "price": { "type": "number", "example": 799.99 },
        "description": { "type": "string", "example": "Latest phone" },
        "inStock": { "type": "integer", "example": 10 },
        "sizes": {
          "description": "Array or comma-separated string",
          "oneOf": [
            { "type": "array", "items": { "type": "string" } },
            { "type": "string" }
          ]
        },
        "categories": {
          "description": "Array of category ids or comma-separated string",
          "oneOf": [
            { "type": "array", "items": { "type": "string" } },
            { "type": "string" }
          ]
        },
        "imageUrl": {
          "type": "string",
          "description": "Filename already uploaded or accessible URL (string)",
          "example": "2023-07-24T08_31_00.909Ziphone.png"
        }
      }
    }
  }
}
